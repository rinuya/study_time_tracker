//@ts-nocheck

import Head from 'next/head'
import { useState, useRef } from "react"
import { useRouter } from 'next/router';
import { signIn } from 'next-auth/react';
import Link from "next/link";

export default function Signin() {

    const router = useRouter();

    const [signupFailed, setSignupFailed] = useState(false);
    const emailRef = useRef();
    const usernameRef = useRef();
    const passwordRef = useRef();
    const secretRef = useRef();

    async function hanldeSubmit(event) {
        if (emailRef.current.value && (emailRef.current.value.includes('@')) && passwordRef.current.value && secretRef.current.value && usernameRef.current.value) {
            let response = await fetch('/api/auth/signup', {
                method: 'POST',
                body: JSON.stringify({ email: emailRef.current.value, password: passwordRef.current.value, username: usernameRef.current.value, secret: secretRef.current.value}),
                headers: {
                  'Content-Type': 'application/json',
                },
            });
            if (response.status == 200) {
                router.replace('/signin');
            } else {
                setSignupFailed(true);        
            }
        }
    }

    return (
        <>
            <Head>
                <title>Signin</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex justify-centerpt-20">
                    {signupFailed ? <p className='text-red-600'>Signup failed</p> : ""}
                    <label htmlFor='email'>E-Mail</label>
                    <input ref={emailRef} name="email" type="email" className="bg-gray-200" />
                    <label htmlFor='username'>Username</label>
                    <input ref={usernameRef} name="username" type="text" className="bg-gray-200" />
                    <label htmlFor='password'>Password</label>
                    <input ref={passwordRef} name="password" type="password" className="bg-gray-200" />
                    <label htmlFor='secret'>Secret</label>
                    <input ref={secretRef} name="secret" type="text" className="bg-gray-200" />
                    <button onClick={hanldeSubmit}>Submit</button>
            </main>
        </>
    )
}
